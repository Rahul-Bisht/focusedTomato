(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{478:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(0);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 17 modules\nvar es = __webpack_require__(27);\n\n// EXTERNAL MODULE: ./node_modules/moment/moment.js\nvar moment = __webpack_require__(20);\nvar moment_default = /*#__PURE__*/__webpack_require__.n(moment);\n\n// EXTERNAL MODULE: ./src/Components/AtomicComponents/Processing.js\nvar Processing = __webpack_require__(87);\n\n// EXTERNAL MODULE: ./src/actions/pomodoroSessions.js\nvar pomodoroSessions = __webpack_require__(88);\n\n// CONCATENATED MODULE: ./src/Components/AtomicComponents/Notification.js\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Notification = function Notification() {\n  var _this = this;\n\n  _classCallCheck(this, Notification);\n\n  _defineProperty(this, "sendNotification", function (msg) {\n    try {\n      if (window.Notification.permission === \'granted\') {\n        _this.notification = new window.Notification(\'FocusedTomato\', {\n          body: msg\n        });\n\n        _this.notification.onclick = function () {\n          window.focus();\n        };\n      }\n    } catch (_unused) {}\n  });\n\n  window.Notification.requestPermission(function (permission) {\n    if (!window.Notification.permission) {\n      window.Notification.permission = permission;\n    }\n  });\n};\n\n/* harmony default export */ var AtomicComponents_Notification = (Notification);\n// CONCATENATED MODULE: ./src/Components/Focus.js\nfunction _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === \'function\') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { Focus_defineProperty(target, key, source[key]); }); } return target; }\n\nfunction Focus_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction Focus_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n //====Lazy loading====\n\nvar Clock = react_default.a.lazy(function () {\n  return __webpack_require__.e(/* import() */ 6).then(__webpack_require__.bind(null, 473));\n});\nvar Indicators = react_default.a.lazy(function () {\n  return __webpack_require__.e(/* import() */ 15).then(__webpack_require__.bind(null, 481));\n});\nvar Button = react_default.a.lazy(function () {\n  return __webpack_require__.e(/* import() */ 11).then(__webpack_require__.bind(null, 266));\n});\nvar TaskList = react_default.a.lazy(function () {\n  return __webpack_require__.e(/* import() */ 12).then(__webpack_require__.bind(null, 249));\n});\nvar Sound = react_default.a.lazy(function () {\n  return __webpack_require__.e(/* import() */ 8).then(__webpack_require__.bind(null, 474));\n});\n\n\n\nvar Focus_Focus =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Focus, _Component);\n\n  function Focus(props) {\n    var _this;\n\n    Focus_classCallCheck(this, Focus);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Focus).call(this, props));\n\n    Focus_defineProperty(_assertThisInitialized(_this), "onTaskChange", function (selectedTask) {\n      _this.setState(function (state) {\n        return _objectSpread({}, state, {\n          btnStatus: "play3"\n        });\n      });\n\n      _this.updateTask(selectedTask);\n\n      _this.updateRootStore();\n    });\n\n    _this.notification = new AtomicComponents_Notification(); //local state for the startwatch\n\n    _this.sounds = {\n      ring: react_default.a.createRef(),\n      ticking: react_default.a.createRef()\n    };\n    _this.config = {\n      duration: 0,\n      newSession: true,\n      intId: -1,\n      paused: false,\n      break: false,\n      local: {\n        min: 0,\n        sec: 0\n      }\n    }; //=====================================================================\n\n    /*different store, that is not rendering had to do this, as setState is async \n    and took time to update this data which is not rendering and\n      as redux store is different occassionaly lagged behind */\n\n    _this.selectedTask = {\n      task: \'\',\n      completed: 0,\n      incomplete: 0\n    };\n    _this.state = {\n      totalSessions: 0,\n      completed: 0,\n      btnStatus: \'play3\',\n      pass: {\n        min: \'00\',\n        sec: \'00\',\n        percentage: 0\n      }\n    }; //updating redux store with completed and incomplete sessions\n\n    _this.updateRootStore = function () {\n      _this.props.dispatch(Object(pomodoroSessions["a" /* startAddSession */])({\n        date: moment_default()().format(\'DD:MM:YYYY\'),\n        data: _this.selectedTask\n      }));\n    };\n\n    _this.updateTask = function (task) {\n      _this.selectedTask.task = task;\n\n      if (_this.props.data) {\n        _this.selectedTask.completed = _this.props.data[_this.selectedTask.task] ? _this.props.data[_this.selectedTask.task].completed : 0;\n        _this.selectedTask.incomplete = _this.props.data[_this.selectedTask.task] ? _this.props.data[_this.selectedTask.task].incomplete : 0;\n      } else {\n        _this.selectedTask.completed = 0;\n        _this.selectedTask.incomplete = 0;\n      } //changed cause thought whatever is being rendered needs to be in state\n\n\n      _this.setState(function (state) {\n        return _objectSpread({}, state, {\n          totalSessions: _this.props.tasks[_this.selectedTask.task],\n          completed: _this.selectedTask.completed\n        });\n      });\n\n      _this.stop();\n    };\n\n    _this.increCompleted = function () {\n      //one can\'t complete more than targets\n      if (_this.selectedTask.completed === _this.state.totalSessions) return;\n      _this.selectedTask.completed = _this.selectedTask.completed + 1;\n\n      _this.updateRootStore();\n\n      _this.setState(function (state) {\n        return _objectSpread({}, state, {\n          completed: _this.selectedTask.completed\n        });\n      });\n\n      if (!_this.props.settings.silent) _this.sounds.ring.current.play();\n      if (_this.props.settings.notification) _this.notification.sendNotification(\'Well Done! You completed your focused session!\');\n    };\n\n    _this.increIncompleted = function () {\n      _this.selectedTask.incomplete = _this.selectedTask.incomplete + 1;\n\n      _this.updateRootStore();\n    }; //=======================================================================\n\n\n    _this.startSession = function () {\n      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \'focusDuration\';\n      var intervalId = setInterval(function () {\n        //if 1 second is left decrement minutes by 1 and set seconds to 59\n        if (_this.config.local.sec === 1 || _this.config.local.sec === 0) {\n          _this.config.local.min = _this.config.local.min - 1;\n          _this.config.local.sec = 59;\n        } else {\n          _this.config.local.sec = _this.config.local.sec - 1;\n        }\n\n        if (_this.config.local.min < 0) {\n          _this.config.local.min = 0;\n          _this.config.local.sec = 0;\n        }\n\n        _this.setState(function (state) {\n          return _objectSpread({}, state, {\n            pass: {\n              min: _this.config.local.min > 9 ? _this.config.local.min.toString() : "0".concat(_this.config.local.min.toString()),\n              sec: _this.config.local.sec > 9 ? _this.config.local.sec.toString() : "0".concat(_this.config.local.sec.toString()),\n              percentage: (_this.config.local.min * 60 + _this.config.local.sec) / (_this.config.duration * 60) * 100\n            }\n          });\n        }); //if it was last minute and time\'s up it would have been set to -1 while checking sec ===1 above\n\n\n        if (_this.config.local.min === 0 && _this.config.local.sec === 0) {\n          if (type === \'focusDuration\') {\n            _this.setState(function (state) {\n              return _objectSpread({}, state, {\n                btnStatus: \'mug\'\n              });\n            });\n\n            _this.config.break = true;\n\n            _this.increCompleted();\n          } else {\n            _this.setState(function (state) {\n              return _objectSpread({}, state, {\n                btnStatus: \'play3\'\n              });\n            });\n\n            _this.config.break = false;\n          }\n\n          _this.config.newSession = true;\n          clearInterval(_this.config.intId);\n          _this.config.intId = -1;\n        }\n      }, 1000);\n      _this.config.intId = intervalId;\n      _this.config.newSession = false;\n    };\n\n    _this.pause = function () {\n      _this.config.paused = true;\n      clearInterval(_this.config.intId);\n      _this.config.intId = -1;\n    };\n\n    _this.stop = function () {\n      if (_this.config.intId !== -1 || _this.config.paused) {\n        if (!_this.config.break) _this.increIncompleted();\n      }\n\n      _this.config.break = false;\n      _this.config.paused = false;\n      _this.config.newSession = true;\n      _this.config.local.min = 0;\n      _this.config.local.sec = 0;\n\n      _this.setState(function (state) {\n        return _objectSpread({}, state, {\n          btnStatus: \'play3\',\n          pass: {\n            min: \'00\',\n            sec: \'00\',\n            percentage: 0\n          }\n        });\n      });\n\n      clearInterval(_this.config.intId);\n      _this.config.intId = -1;\n    }; //function to control the clock\n\n\n    _this.watchControl = function () {\n      if (_this.state.totalSessions - _this.state.completed === 0) return;\n\n      if (_this.config.newSession && !_this.config.break) {\n        //clock may be is being started after it was paused in that case no need to update clock state\n        if (!_this.config.paused) {\n          _this.config.duration = _this.props.settings.focusDuration;\n          _this.config.local.min = _this.props.settings.focusDuration;\n          _this.config.local.sec = 0;\n\n          _this.setState(function (state) {\n            return _objectSpread({}, state, {\n              btnStatus: \'pause2\',\n              pass: {\n                min: _this.props.settings.focusDuration < 9 ? "0".concat(_this.props.settings.focusDuration) : "".concat(_this.props.settings.focusDuration),\n                sec: "00",\n                percentage: 100\n              }\n            });\n          });\n        }\n\n        _this.startSession();\n      } else if (!_this.config.newSession && !_this.config.paused && !_this.config.break) {\n        _this.setState(function (state) {\n          return _objectSpread({}, state, {\n            btnStatus: \'play3\'\n          });\n        });\n\n        _this.pause();\n      } else if (!_this.config.newSession && _this.config.paused && !_this.config.break) {\n        _this.config.paused = false;\n\n        _this.setState(function (state) {\n          return _objectSpread({}, state, {\n            btnStatus: \'pause2\'\n          });\n        });\n\n        _this.startSession();\n      } else if (!_this.config.newSession && _this.config.break) {\n        _this.stop();\n      } else {\n        _this.sounds.ring.current.pause();\n\n        if (_this.state.completed % 4 === 0 && _this.state.totalSessions - _this.state.completed > 4) {\n          //longbreak\n          _this.config.duration = _this.props.settings.longBreakDuration;\n          _this.config.local.min = _this.props.settings.longBreakDuration;\n\n          _this.setState(function (state) {\n            return _objectSpread({}, state, {\n              btnStatus: \'next2\',\n              pass: {\n                min: "".concat(_this.props.settings.longBreakDuration),\n                sec: "00",\n                percentage: 100\n              }\n            });\n          });\n\n          _this.startSession(\'\');\n        } else {\n          //shortbreak\n          _this.config.duration = _this.props.settings.shortBreakDuration;\n          _this.config.local.min = _this.props.settings.shortBreakDuration;\n\n          _this.setState(function (state) {\n            return _objectSpread({}, state, {\n              btnStatus: \'next2\',\n              pass: {\n                min: "0".concat(_this.props.settings.shortBreakDuration),\n                sec: "00",\n                percentage: 100\n              }\n            });\n          });\n\n          _this.startSession(\'\');\n        }\n      }\n    };\n\n    _this.addAminute = function () {\n      _this.config.local.min += 1;\n      _this.config.duration += 1;\n    };\n\n    _this.deductAminute = function () {\n      if (_this.config.local.min > 1) {\n        _this.config.local.min -= 1;\n      } else {\n        _this.config.local.min = 0;\n        _this.config.local.sec = 1;\n      }\n    };\n\n    _this.restart = function () {\n      //completed task can\'t be negative\n      if (_this.selectedTask.completed === 0) return;\n      _this.selectedTask.completed = _this.selectedTask.completed - 1;\n\n      _this.updateRootStore();\n\n      _this.setState(function (state) {\n        return _objectSpread({}, state, {\n          completed: _this.selectedTask.completed\n        });\n      });\n\n      _this.stop();\n    };\n\n    return _this;\n  }\n\n  _createClass(Focus, [{\n    key: "componentDidMount",\n    //loads the initial task to the state\n    value: function componentDidMount() {\n      if (this.props.tasks) {\n        var tasks = Object.keys(this.props.tasks);\n        this.updateTask(tasks[0]);\n        this.updateRootStore();\n      }\n    } //function to handle when task is changed \n\n  }, {\n    key: "render",\n\n    /*=====================================================================================================*/\n    value: function render() {\n      return react_default.a.createElement(react["Suspense"], {\n        fallback: react_default.a.createElement("div", {\n          className: "dynamicload"\n        }, react_default.a.createElement(Processing["a" /* default */], null))\n      }, react_default.a.createElement("div", {\n        className: "focus"\n      }, react_default.a.createElement(Indicators, {\n        active: this.state.totalSessions - this.state.completed,\n        inactive: this.state.completed\n      }), react_default.a.createElement("div", {\n        className: "focus__btnPanel"\n      }, react_default.a.createElement(Button, {\n        icon: \'plus\',\n        clicked: this.addAminute\n      }), react_default.a.createElement(TaskList, {\n        onTaskChange: this.onTaskChange\n      }), react_default.a.createElement(Button, {\n        icon: \'minus\',\n        clicked: this.deductAminute\n      })), react_default.a.createElement(Clock, this.state.pass), react_default.a.createElement("div", {\n        className: "focus__btnPanel"\n      }, react_default.a.createElement(Button, {\n        icon: this.state.btnStatus,\n        clicked: this.watchControl\n      }), react_default.a.createElement(Button, {\n        icon: \'undo\',\n        clicked: this.restart\n      }), react_default.a.createElement(Button, {\n        icon: \'stop2\',\n        clicked: this.stop\n      })), react_default.a.createElement(Sound, {\n        ref: this.sounds.ring\n      })));\n    }\n  }]);\n\n  return Focus;\n}(react["Component"]);\n\nvar Focus_mapsStateToProps = function mapsStateToProps(state) {\n  if (state.tasks) {\n    return {\n      data: state.data[moment_default()().format(\'DD:MM:YYYY\')],\n      tasks: state.tasks,\n      settings: state.config\n    };\n  } else {\n    return {\n      data: state.data[moment_default()().format(\'DD:MM:YYYY\')],\n      tasks: false,\n      settings: state.config\n    };\n  }\n};\n\nvar ConnectedFocus = Object(es["b" /* connect */])(Focus_mapsStateToProps)(Focus_Focus);\n/* harmony default export */ var Components_Focus = __webpack_exports__["default"] = (ConnectedFocus);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///478\n')}}]);